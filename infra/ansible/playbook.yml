---
- name: Deploy InfraTrack (Nginx → Gunicorn/Flask via Docker Compose)
  hosts: web
  become: true

  vars:
    repo_url: "https://github.com/samslat3r/infratrack.git"  # set to your repo
    repo_version: "master"
    app_dir: "/opt/infratrack"

  pre_tasks:
    - name: Gather facts
      setup:

    - name: Compute apt architecture (maps x86_64→amd64, aarch64→arm64)
      set_fact:
        apt_arch: "{{ 'arm64' if ansible_architecture in ['aarch64','arm64'] else 'amd64' }}"

    - name: Ensure base deps
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Ensure /etc/apt/keyrings exists
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Download Docker GPG key (ASCII)
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: "0644"
      
    - name: Convert Docker GPG key to keyring (.gpg)
      command:
        argv:
          - gpg
          - --dearmor
          - -o
          - /etc/apt/keyrings/docker.gpg
          - /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Ensure keyring readable
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: "0644"

    - name: "Add Docker APT repository (uses detected release: {{ ansible_distribution_release | lower }})"
      apt_repository:
        repo: "deb [arch={{ apt_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
        filename: docker
        state: present

    - name: Update apt cache (Docker repo added)
      apt:
        update_cache: yes

    - name: Install Docker Engine + Compose v2 plugin
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - git
          - python3-pip
          - curl
        state: present

    - name: Ensure docker service is running and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add ubuntu user to docker group
      user:
        name: ubuntu
        groups: docker
        append: yes

  roles:
    - web